AWSTemplateFormatVersion: '2010-09-09'
Description: SQS Event Source Mapping triggering Lambda

Parameters:
  Stage:
    Type: String
    Default: Dev

Resources:
  # --- SQS Queue ---
  ProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "ProcessingQueue-${Stage}"
      VisibilityTimeout: 60 # Seconds

  # --- Lambda Function ---
  SqsConsumerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow # Permission to read from SQS queue
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt ProcessingQueue.Arn

  SqsConsumerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "SqsProcessor-${Stage}"
      Handler: index.handler
      Role: !GetAtt SqsConsumerLambdaRole.Arn
      Runtime: python3.9
      Code:
        ZipFile: |
          import json
          def handler(event, context):
              print(f"Received {len(event.get('Records', []))} messages from SQS.")
              for record in event.get('Records', []):
                  print("Processing message:", record.get('body'))
                  # Add processing logic here
              return {'status': 'processed'}

  # --- Event Source Mapping ---
  LambdaSqsEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: True
      EventSourceArn: !GetAtt ProcessingQueue.Arn # Reference to the SQS Queue
      FunctionName: !GetAtt SqsConsumerLambda.Arn # Reference to the Lambda Function

Outputs:
  QueueURL:
    Description: URL of the SQS queue
    Value: !Ref ProcessingQueue
  LambdaFunctionName:
    Description: Name of the consuming Lambda function
    Value: !Ref SqsConsumerLambda 